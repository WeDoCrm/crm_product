<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAgEB
        AQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8P
        DxMEBAQFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAQA==
</value>
  </data>
</root>